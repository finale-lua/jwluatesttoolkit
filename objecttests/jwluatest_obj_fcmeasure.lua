function FCTimeSignature_ValueTests_ItemNo1(time_sig)
   BoolValuePropertyTest(time_sig, "FCTimeSignature", "Abbreviate", false)
   NumberValuePropertyTest(time_sig, "FCTimeSignature", "BeatDuration", 1024)
   NumberValuePropertyTest(time_sig, "FCTimeSignature", "Beats", 4)
   BoolValuePropertyTest_RO(time_sig, "FCTimeSignature", "CompositeBottom", false)
   BoolValuePropertyTest_RO(time_sig, "FCTimeSignature", "CompositeTop", false)
end


function FCTimeSignature_ForDisplay_ValueTests_ItemNo1(time_sig_disp)
   BoolValuePropertyTest(time_sig_disp, "FCTimeSignature", "Abbreviate", true)
   NumberValuePropertyTest(time_sig_disp, "FCTimeSignature", "BeatDuration", 1024)
   NumberValuePropertyTest(time_sig_disp, "FCTimeSignature", "Beats", 4)
   BoolValuePropertyTest_RO(time_sig_disp, "FCTimeSignature", "CompositeBottom", false)
   BoolValuePropertyTest_RO(time_sig_disp, "FCTimeSignature", "CompositeTop", false)
end


function FCKeySignature_ValueTests_ItemNo1(key_sig)
   NumberValuePropertyTest_RO(key_sig, "FCKeySignature", "Alteration", 0)
   NumberValuePropertyTest_RO(key_sig, "FCKeySignature", "ID", 0)
   NumberValuePropertyTest_RO(key_sig, "FCKeySignature", "IDWithTransposition", 0)
   NumberValuePropertyTest(key_sig, "FCKeySignature", "TransposeAlteration", 0)
   BoolValuePropertyTest(key_sig, "FCKeySignature", "TransposeSimplify", false)
end

function FCMeasure_ValueTests_ItemNo1(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_NORMAL)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", true)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_DEFAULT)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", true)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_MANUALLY)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", true)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_SHOW)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_SHOW)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", true)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignatureForDisplay", "FCTimeSignature")
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", true)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 684)

   FCTimeSignature_ValueTests_ItemNo1(meas.TimeSignature)
   FCTimeSignature_ForDisplay_ValueTests_ItemNo1(meas.TimeSignatureForDisplay)
   FCKeySignature_ValueTests_ItemNo1(meas.KeySignature)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "#1", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "1", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(1))
FCMeasure_ValueTests_ItemNo1(meas)




function FCMeasure_ValueTests_ItemNo2(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_DOUBLE)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_NORMAL)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", true)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", false)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_BEATCHART)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", false)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_HIDE)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_HIDE)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 39)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 480)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "1", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "1", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(2))
FCMeasure_ValueTests_ItemNo2(meas)



function FCMeasure_ValueTests_ItemNo3(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_FINAL)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_DOUBLE)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", true)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", false)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_TIMESIG)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", false)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_IFNEEDED)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_IFNEEDED)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 60)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 636)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "2", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "2", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(3))
FCMeasure_ValueTests_ItemNo3(meas)


function FCMeasure_ValueTests_ItemNo4(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_THICK)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_FINAL)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", true)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", false)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_TIMESIG)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", false)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_SHOW)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_IFNEEDED)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", true)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 600)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "3", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "3", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(4))
FCMeasure_ValueTests_ItemNo4(meas)


function FCMeasure_ValueTests_ItemNo5(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_DASHED)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_THICK)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", true)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_TIMESIG)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", true)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_IFNEEDED)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_IFNEEDED)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 600)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "#5", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "5", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(5))
FCMeasure_ValueTests_ItemNo5(meas)


function FCMeasure_ValueTests_ItemNo6(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", true)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_NONE)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_DASHED)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", false)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_TIMESIG)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", false)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_IFNEEDED)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_HIDE)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 600)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "4", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "4", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(6))
FCMeasure_ValueTests_ItemNo6(meas)


function FCMeasure_ValueTests_ItemNo7(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_TICK)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_NONE)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", false)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_MANUALLY)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", false)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_HIDE)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_IFNEEDED)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 600)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "5", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "5", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(7))
FCMeasure_ValueTests_ItemNo7(meas)


function FCMeasure_ValueTests_ItemNo8(meas)
   BoolValuePropertyTest(meas, "FCMeasure", "AllowHorizontalSplit", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BackwardRepeat", true)
   NumberValuePropertyTest(meas, "FCMeasure", "Barline", finale.BARLINE_SHAPE)
   NumberValuePropertyTest(meas, "FCMeasure", "BarlineShapeID", 51)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakMMRest", false)
   BoolValuePropertyTest(meas, "FCMeasure", "BreakWordExtension", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ChordFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ContainsManualMeasureNumbers", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ExpressionFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "ForwardRepeat", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideCautionary", false)
   BoolValuePropertyTest(meas, "FCMeasure", "HideKeySigShowAccis", false)
   BoolValuePropertyTest(meas, "FCMeasure", "IncludeInNumbering", true)
   ObjectPropertyTest_RO(meas, "FCMeasure", "KeySignature", "FCKeySignature")
   BoolValuePropertyTest(meas, "FCMeasure", "Keyless", false)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarline", finale.BARLINE_SHAPE)
   NumberValuePropertyTest(meas, "FCMeasure", "LeftBarlineShapeID", 52)
   BoolValuePropertyTest(meas, "FCMeasure", "OverrideGroupBarlines", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PageBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "PositionEvenly", false)
   NumberValuePropertyTest(meas, "FCMeasure", "PositioningNotesMode", finale.POSITIONING_BEATCHART)
   BoolValuePropertyTest(meas, "FCMeasure", "RepeatBracketFlag", true)
   BoolValuePropertyTest(meas, "FCMeasure", "ShowFullNames", false)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowKeySignature", finale.SHOWSTATE_HIDE)
   NumberValuePropertyTest(meas, "FCMeasure", "ShowTimeSignature", finale.SHOWSTATE_IFNEEDED)
   BoolValuePropertyTest(meas, "FCMeasure", "SmartShapeFlag", false)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceAfter", 0)
   NumberValuePropertyTest(meas, "FCMeasure", "SpaceBefore", 0)
   BoolValuePropertyTest(meas, "FCMeasure", "SystemBreak", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextFlag", false)
   BoolValuePropertyTest(meas, "FCMeasure", "TextRepeatFlag", false)
   ObjectPropertyTest_RO(meas, "FCMeasure", "TimeSignature", "FCTimeSignature")
   AssureNil(meas.TimeSignatureForDisplay)
   BoolValuePropertyTest(meas, "FCMeasure", "UseTimeSigForDisplay", false)
   NumberValuePropertyTest(meas, "FCMeasure", "Width", 600)
   
   if AssureNonNil(meas.CreateNumberString, "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..") is non nil.") then
       AssureEqual(meas:CreateNumberString().LuaString, "6", "FCMeasure.CreateNumberString ("..tostring(meas.ItemNo)..")")
       AssureEqual(meas:CreateNumberStringUnqualified().LuaString, "6", "FCMeasure.CreateNumberStringUnqualified ("..tostring(meas.ItemNo)..")")
   end
end


-- Call:
local meas = finale.FCMeasure()
AssureTrue(meas:Load(8))
FCMeasure_ValueTests_ItemNo8(meas)
